{
  "openapi": "3.0.0",
  "info": {
    "title": "Google Keep Clone API",
    "version": "1.0.0",
    "description": "A RESTful API that replicates the core functionalities of Google Keep, allowing users to create, update, delete, and retrieve notes with tags and reminders. Supports user authentication and session management."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local Development Server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Sessions",
      "description": "Authentication operations"
    },
    {
      "name": "Notes",
      "description": "Note management operations"
    },
    {
      "name": "Tags",
      "description": "Tag management operations"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the created user"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User registered successfully"
                    },
                    "user": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data"
          }
        }
      }
    },
    "/users/{id}": {
      "patch": {
        "summary": "Update user details",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate"
              },
              "example": {
                "username": "newusername",
                "password": "newpassword123"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": ["Users"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "summary": "User login",
        "tags": ["Sessions"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "JWT token returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "JWT authentication token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      },
      "delete": {
        "summary": "User logout",
        "tags": ["Sessions"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "204": {
            "description": "User logged out successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          }
        }
      }
    },
    "/notes": {
      "get": {
        "summary": "Retrieve all notes",
        "tags": ["Notes"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "A list of notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Note"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new note",
        "tags": ["Notes"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note created successfully",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the created note"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Note created successfully"
                    },
                    "note": {
                      "$ref": "#/components/schemas/Note"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          }
        }
      }
    },
    "/notes/{id}": {
      "patch": {
        "summary": "Update a note",
        "tags": ["Notes"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Note"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Note updated successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Note updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Note not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a note",
        "tags": ["Notes"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Note deleted successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          },
          "404": {
            "description": "Note not found"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "Retrieve all tags",
        "tags": ["Tags"],
        "security": [{"bearerAuth": []}],
        "responses": {
          "200": {
            "description": "A list of tags",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tag"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new tag",
        "tags": ["Tags"],
        "security": [{"bearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created successfully",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "URL of the created tag"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag created successfully"
                    },
                    "tag": {
                      "$ref": "#/components/schemas/Tag"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Tag name is required"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          }
        }
      }
    },
    "/tags/{id}": {
      "patch": {
        "summary": "Update a tag",
        "tags": ["Tags"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tag updated successfully"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Tag not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a tag",
        "tags": ["Tags"],
        "security": [{"bearerAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Tag deleted successfully"
          },
          "401": {
            "description": "Access denied: Missing or invalid token"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string",
            "example": "johndoe"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "secretpassword123"
          }
        }
      },
      "UserUpdate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string",
            "format": "password"
          }
        }
      },
      "Note": {
        "type": "object",
        "required": ["title", "content"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string",
            "example": "Shopping List"
          },
          "content": {
            "type": "string",
            "example": "1. Milk\n2. Bread\n3. Eggs"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "reminder": {
            "type": "string",
            "format": "date-time",
            "example": "2025-02-13T10:00:00Z"
          }
        }
      },
      "Tag": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "example": "work"
          }
        }
      }
    }
  }
}
